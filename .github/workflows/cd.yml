name: 'Terraform CI/CD'

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no'

permissions:
  contents: read
  pull-requests: write

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'us-west-2'

jobs:
  terraform_static_analysis:
    name: 'Terraform Static Analysis'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Corrected to v3

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform

      - name: Terraform Format
        working-directory: tf-mods-version
        run: |
          terraform fmt -check
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Terraform Initialize
        working-directory: tf-mods-version
        run: terraform init

      - name: Terraform Validate
        working-directory: tf-mods-version
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Terraform Lint
        working-directory: tf-mods-version
        run: tflint

  terraform_plan_test:
    name: 'Terraform Plan for Test'
    runs-on: ubuntu-latest
    needs: terraform_static_analysis
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Corrected to v3

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform

      - name: Terraform Plan for Test
        working-directory: tf-mods-version
        id: plan-test
        run: |
          terraform init
          terraform plan -out=plan-test
          terraform show -no-color plan-test > plan-test.txt

      - name: Upload Terraform Plan Artifact for Test
        uses: actions/upload-artifact@v3  # Corrected to v3
        with:
          name: plan-test
          path: terraform/plan-test

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: [terraform_plan_test]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirmation == 'yes'
    steps:
      - uses: actions/checkout@v3  # Corrected to v3

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform

      - name: Terraform Apply
        working-directory: tf-mods-version
        run: |
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-2'




  # test_deployment:
  #   name: 'Test Deployment'
  #   runs-on: ubuntu-latest
  #   needs: [terraform_apply]
  #   steps:
  #     - name: Wait for DNS propagation
  #       run: sleep 60  # Wait for 60 seconds to allow for DNS propagation

  #     - name: Test HTTPS endpoint
  #       run: |
  #         response=$(curl -s -o /dev/null -w "%{http_code}" https://tm.lab.moabukar.co.uk/workspaces/default/dashboard)
  #         if [ $response -eq 200 ]; then
  #           echo "Deployment successful! Received HTTP 200 OK."
  #         else
  #           echo "Deployment may have issues. Received HTTP $response"
  #           exit 1
  #         fi
